@page "/Persistence"

@using Syncfusion.Blazor.Gantt
@using Syncfusion.Blazor.Navigations
@inject IJSRuntime JsInterop
<SfGantt ID="Persist" @ref="Gantt" DataSource="@TaskCollection" Height="450px" Width="100%"
    ProjectStartDate="@ProjectStart" ProjectEndDate="@ProjectEnd" Toolbar="Toolbaritems" AllowReordering="true"
    AllowFiltering="true" AllowSorting="true" AllowResizing="true" ShowColumnMenu="true" EnablePersistence="true">
    <GanttTaskFields Id="TaskId" Name="TaskName" StartDate="StartDate" EndDate="EndDate" Duration="Duration"
        Progress="Progress" Dependency="Predecessor" ParentID="ParentId"></GanttTaskFields>
    <GanttLabelSettings LeftLabel="TaskName" TValue="TaskData">
    </GanttLabelSettings>
    <GanttEvents OnToolbarClick="ToolbarClickHandler" TValue="TaskData"></GanttEvents>
</SfGantt>

@code {
    private SfGantt<TaskData> Gantt;
#pragma warning disable BL0005 // Component parameter should not be set outside of its component.
    private List<Object> Toolbaritems = new List<Object>() {
        "ZoomIn", "ZoomOut", "ZoomToFit",
        new ToolbarItem() { Text = "Save state", TooltipText = "Save state", Id = "GetPersistence", PrefixIcon= "e-savestate" },
        new ToolbarItem() { Text = "Load state", TooltipText = "Load state", Id = "SetPersistence", PrefixIcon= "e-setstate" },
        new ToolbarItem() { Text = "Reset state", TooltipText = "Reset state", Id = "ClearPersistence", PrefixIcon=
        "e-resetstate" },
        new ToolbarItem() { Text = "Reload page", TooltipText = "Reload page", Id = "ReloadPage", PrefixIcon= "e-reloadpage" }
    };
#pragma warning restore BL0005 // Component parameter should not be set outside of its component.
    private string PersistedState = null;
    private List<TaskData> TaskCollection { get; set; }
    public DateTime ProjectStart = new DateTime(2021, 03, 30);
    public DateTime ProjectEnd = new DateTime(2021, 07, 03);
    protected override void OnInitialized()
    {
        this.TaskCollection = ProjectNewData();
    }
    private async void ToolbarClickHandler(ClickEventArgs args)
    {
        if (args.Item.Id == "GetPersistence")
        {
            PersistedState = await Gantt.GetPersistDataAsync();
        }
        else if (args.Item.Id == "SetPersistence")
        {
            await Gantt.SetPersistDataAsync(PersistedState);
        }
        else if (args.Item.Id == "ClearPersistence")
        {
            await Gantt.ResetPersistDataAsync();
        }
        else if (args.Item.Id == "ReloadPage")
        {
            await JsInterop.InvokeVoidAsync("window.location.reload");
        }
    }
    public class TaskData
    {
        public int TaskId { get; set; }
        public string TaskName { get; set; }
        public DateTime? StartDate { get; set; }
        public DateTime? EndDate { get; set; }
        public DateTime? BaselineStartDate { get; set; }
        public DateTime? BaselineEndDate { get; set; }
        public string Duration { get; set; }
        public int Progress { get; set; }
        public string Predecessor { get; set; }
        public object ResourceId { get; set; }
        public string Notes { get; set; }
        public string TaskType { get; set; }
        public int? ParentId { get; set; }
    }
    public static List<TaskData> ProjectNewData()
    {
        List<TaskData> Tasks = new List<TaskData>() {
            new TaskData() {
                TaskId = 1,
                TaskName = "Product concept ",
                StartDate = new DateTime(2021, 04, 02),
                EndDate = new DateTime(2021, 04, 08),
                Duration = "5days"
            },
            new TaskData() {
                TaskId = 2,
                TaskName = "Define the product usage",
                StartDate = new DateTime(2021, 04, 02),
                EndDate = new DateTime(2021, 04, 08),
                Duration = "3",
                Progress = 30,
                ParentId = 1,
                BaselineStartDate = new DateTime(2021, 04, 02),
                BaselineEndDate = new DateTime(2021, 04, 02)
            },
            new TaskData() {
                TaskId = 3,
                TaskName = "Define the target audience",
                StartDate = new DateTime(2021, 04, 02),
                EndDate = new DateTime(2021, 04, 04),
                Progress = 40,
                Duration = "2Days",
                ParentId = 1
            },
            new TaskData() {
                TaskId = 4,
                TaskName = "Prepare product sketch and notes",
                StartDate = new DateTime(2021, 04, 05),
                Duration = "4",
                Progress = 30,
                ParentId = 1,
                Predecessor="2"
            },
            new TaskData() {
                TaskId = 5,
                TaskName = "Concept approval",
                StartDate = new DateTime(2021, 04, 08),
                EndDate = new DateTime(2021, 04, 08),
                Duration="0",
                ParentId = 1,
                Predecessor="3,4"
            },
            new TaskData() {
                TaskId = 6,
                TaskName = "Market research",
                StartDate = new DateTime(2021, 04, 09),
                EndDate = new DateTime(2021, 04, 18),
                BaselineStartDate = new DateTime(2021, 04, 09),
                BaselineEndDate = new DateTime(2021, 04, 09),
                Duration = "4",
                Progress = 30
            },
            new TaskData() {
                TaskId = 7,
                TaskName = "Demand analysis",
                Duration = "4",
                Progress = 40,
                ParentId = 6
            },
            new TaskData() {
                TaskId = 8,
                TaskName = "Customer strength",
                StartDate = new DateTime(2021, 04, 09),
                EndDate = new DateTime(2021, 04, 12),
                Duration = "4",
                Progress = 30,
                ParentId = 7,
                Predecessor="5",
                BaselineStartDate = new DateTime(2021, 04, 12),
                BaselineEndDate = new DateTime(2021, 04, 13)
            },
            new TaskData() {
                TaskId = 9,
                TaskName = "Market opportunity analysis",
                StartDate = new DateTime(2021, 04, 09),
                EndDate = new DateTime(2021, 04, 012),
                Duration="4",
                ParentId= 7,
                Predecessor="5"
            },
            new TaskData() {
                TaskId = 10,
                TaskName = "Competitor analysis",
                StartDate = new DateTime(2021, 04, 15),
                EndDate = new DateTime(2021, 04, 18),
                Duration = "4",
                Progress = 30,
                ParentId= 6,
                Predecessor="7,8"
            },
            new TaskData() {
                TaskId = 11,
                TaskName = "Product strength analysis",
                StartDate = new DateTime(2021, 04, 15),
                EndDate = new DateTime(2021, 04, 18),
                Duration = "4",
                Progress = 40,
                ParentId = 6,
                Predecessor="9"
            },
            new TaskData() {
                TaskId = 12,
                TaskName = "Research completed",
                StartDate = new DateTime(2021, 04, 18),
                EndDate = new DateTime(2021, 04, 18),
                Duration = "0",
                Progress = 30,
                ParentId = 6,
                Predecessor="10"
            },
            new TaskData() {
                TaskId = 13,
                TaskName = "Product design and development",
                StartDate = new DateTime(2021, 04, 19),
                EndDate = new DateTime(2021, 05, 16),
                Duration="20"
            },
            new TaskData() {
                TaskId = 14,
                TaskName = "Functionality design",
                StartDate = new DateTime(2021, 04, 19),
                EndDate = new DateTime(2021, 04, 23),
                Duration = "4",
                Progress = 30,
                ParentId = 13,
                Predecessor="12"
            },
            new TaskData() {
                TaskId = 15,
                TaskName = "Quality design",
                StartDate = new DateTime(2021, 04, 19),
                EndDate = new DateTime(2021, 04, 23),
                Duration = "3",
                Progress = 40,
                ParentId = 13,
                Predecessor="12"
            },
            new TaskData() {
                TaskId = 16,
                TaskName = "Define reliability",
                StartDate = new DateTime(2021, 04, 24),
                EndDate = new DateTime(2021, 04, 25),
                Duration = "4",
                Progress = 30,
                ParentId = 13,
                Predecessor="15"
            },
            new TaskData() {
                TaskId = 17,
                TaskName = "Identifying raw materials",
                StartDate = new DateTime(2021, 04, 24),
                EndDate = new DateTime(2021, 04, 25),
                Duration="2",
                ParentId=13,
                Predecessor="15"
            },
            new TaskData() {
                TaskId = 18,
                TaskName = "Define cost plan",
                StartDate = new DateTime(2021, 04, 26),
                EndDate = new DateTime(2021, 04, 29),
                Duration = "2",
                Progress = 30,
                ParentId=13,
                Predecessor="17"
            },
            new TaskData() {
                TaskId = 19,
                TaskName = "Estimate manufacturing cost",
                StartDate = new DateTime(2021, 04, 26),
                EndDate = new DateTime(2021, 04, 29),
                Duration = "3",
                Progress = 40,
                ParentId = 18,
                Predecessor="17"
            },
            new TaskData() {
                TaskId = 20,
                TaskName = "Estimate selling cost",
                StartDate = new DateTime(2021, 04, 26),
                EndDate = new DateTime(2021, 04, 29),
                Duration = "3",
                Progress = 30,
                ParentId = 18,
                Predecessor="17"
            },
            new TaskData() {
                TaskId = 21,
                TaskName = "Development of final design",
                StartDate = new DateTime(2021, 04, 30),
                EndDate = new DateTime(2021, 05, 08),
                Duration="7",
                ParentId=13
            },
            new TaskData() {
                TaskId = 22,
                TaskName = "Develop dimensions and design",
                StartDate = new DateTime(2021, 04, 30),
                EndDate = new DateTime(2021, 05, 01),
                Duration = "4",
                Progress = 30,
                ParentId=21,
                Predecessor="19,20"
            },
            new TaskData() {
                TaskId = 23,
                TaskName = "Develop designs to meet industry",
                StartDate = new DateTime(2021, 05, 02),
                EndDate = new DateTime(2021, 05, 03),
                Duration = "3",
                Progress = 40,
                ParentId = 21,
                Predecessor="22"
            },
            new TaskData() {
                TaskId = 24,
                TaskName = "Include all the details",
                StartDate = new DateTime(2021, 05, 06),
                EndDate = new DateTime(2021, 05, 08),
                Duration = "4",
                Progress = 30,
                ParentId = 21,
                Predecessor="23"
            },
            new TaskData() {
                TaskId = 25,
                TaskName = "CAD - Computer Aided Design",
                StartDate = new DateTime(2021, 05, 09),
                EndDate = new DateTime(2021, 05, 13),
                Duration="3",
                Predecessor="24"
            },
            new TaskData() {
                TaskId = 26,
                TaskName = "CAM - Computer Aided Manufacturing",
                StartDate = new DateTime(2021, 05, 14),
                EndDate = new DateTime(2021, 05, 16),
                Duration = "4",
                Progress = 30,
                Predecessor="25"
            },
            new TaskData() {
                TaskId = 27,
                TaskName = "Finalize the design",
                StartDate = new DateTime(2021, 04, 16),
                EndDate = new DateTime(2021, 04, 16),
                Duration = "0",
                Progress = 40,
                Predecessor="26"
            },
            new TaskData() {
                TaskId = 28,
                TaskName = "Prototype testing",
                StartDate = new DateTime(2021, 05, 17),
                EndDate = new DateTime(2021, 05, 22),
                Duration = "4",
                Progress = 30,
                Predecessor="27"
            },
            new TaskData() {
                TaskId = 29,
                TaskName = "Include feedback",
                StartDate = new DateTime(2021, 05, 17),
                EndDate = new DateTime(2021, 05, 22),
                Duration="4",
                Predecessor="28ss"
            },
            new TaskData() {
                TaskId = 30,
                TaskName = "Manufacturing",
                StartDate = new DateTime(2021, 05, 23),
                EndDate = new DateTime(2021, 05, 29),
                Duration = "5",
                Progress = 30,
                Predecessor="28,29"
            },
            new TaskData() {
                TaskId = 31,
                TaskName = "Assembling material into finished goods",
                StartDate = new DateTime(2021, 05, 30),
                EndDate = new DateTime(2021, 06, 05),
                Duration = "5",
                Progress = 40,
                Predecessor="30"
            },
            new TaskData() {
                TaskId = 32,
                TaskName = "Final product development",
                StartDate = new DateTime(2021, 06, 06),
                EndDate = new DateTime(2021, 06, 13),
                Duration = "6",
                Progress = 30
            },
            new TaskData() {
                TaskId =33,
                TaskName = "Important improvement",
                StartDate = new DateTime(2021, 06, 06),
                EndDate = new DateTime(2021, 06, 10),
                Duration="3",
                ParentId=32,
                Predecessor="31"
            },
            new TaskData() {
                TaskId = 34,
                TaskName = "Customer testing and feedback",
                StartDate = new DateTime(2021, 06, 11),
                EndDate = new DateTime(2021, 06, 13),
                Duration = "4",
                Progress = 30,
                ParentId=32,
                Predecessor="33"
            },
            new TaskData() {
                TaskId = 35,
                TaskName = "Final product development",
                StartDate = new DateTime(2021, 06, 14),
                EndDate = new DateTime(2021, 06, 19),
                Duration = "4",
                Progress = 40
            },
            new TaskData() {
                TaskId = 36,
                TaskName = "Important improvement",
                StartDate = new DateTime(2021, 06, 14),
                EndDate = new DateTime(2021, 06, 19),
                Duration = "4",
                Progress = 30,
                ParentId = 35,
                Predecessor="34"
            },
            new TaskData() {
                TaskId = 37,
                TaskName = "Address any unforeseen issues",
                StartDate = new DateTime(2021, 06, 14),
                EndDate = new DateTime(2021, 06, 19),
                Duration = "4",
                Progress = 30,
                Predecessor="36ss",
                ParentId=35
            },
            new TaskData() {
                TaskId = 38,
                TaskName = "Finalize the product ",
                StartDate = new DateTime(2021, 06, 20),
                EndDate = new DateTime(2021, 07, 01),
                Duration = "8",
                Progress = 40
            },
            new TaskData() {
                TaskId = 39,
                TaskName = "Branding the product",
                StartDate = new DateTime(2021, 06, 20),
                EndDate = new DateTime(2021, 06, 25),
                Duration = "4",
                Progress = 30,
                ParentId = 38,
                Predecessor="37"
            },
            new TaskData()
            {
                TaskId=40,
                TaskName="Marketing and presales",
                StartDate=new DateTime(2021,06,26),
                EndDate=new DateTime(2021,07,01),
                ParentId=38,
                Duration="4",
                Predecessor="39"
            }
        };
        return Tasks;
    }
}
<style>
    .bootstrap4 .e-savestate::before {
        content: '\e74d';
    }

    .bootstrap4 .e-setstate::before {
        content: '\e75d';
    }

    .bootstrap4 .e-reloadpage::before {
        content: '\e716';
    }

    .bootstrap5 .e-savestate::before,
    .bootstrap5-dark .e-savestate::before,
    .tailwind .e-savestate::before,
    .fluent .e-savestate::before,
    .fluent-dark .e-savestate::before,
    .tailwind-dark .e-savestate::before,
    .material3 .e-savestate::before,
    .material3-dark .e-savestate::before {
        content: '\e7c8';
    }

    .bootstrap5 .e-setstate::before,
    .bootstrap5-dark .e-setstate::before,
    .tailwind-dark .e-setstate::before,
    .tailwind .e-setstate::before,
    .fluent .e-setstate::before,
    .fluent-dark .e-setstate::before,
    .material3 .e-setstate::before,
    .material3-dark .e-setstate::before {
        content: '\e7a1';
    }

    .bootstrap5 .e-reloadpage::before,
    .bootstrap5-dark .e-reloadpage::before,
    .tailwind-dark .e-reloadpage::before,
    .tailwind .e-reloadpage::before,
    .fluent .e-reloadpage::before,
    .fluent-dark .e-reloadpage::before,
    .material3 .e-reloadpage::before,
    .material3-dark .e-reloadpage::before {
        content: '\e706';
    }

    .bootstrap .e-savestate::before,
    .bootstrap-dark .e-savestate::before {
        content: '\e701';
    }

    .bootstrap .e-setstate::before,
    .bootstrap-dark .e-setstate::before {
        content: '\ec32';
    }

    .bootstrap .e-reloadpage::before,
    .bootstrap-dark .e-reloadpage::before {
        content: '\e975';
    }

    .fabric .e-savestate::before,
    .fabric-dark .e-savestate::before,
    .highcontrast .e-savestate::before {
        content: '\e700';
    }

    .fabric .e-setstate::before {
        content: '\ebe4';
    }

    .fabric .e-reloadpage::before,
    .fabric-dark .e-reloadpage::before {
        content: '\e218';
    }

    .highcontrast .e-setstate::before,
    .fabric-dark .e-setstate::before {
        content: '\e603';
    }

    .highcontrast .e-reloadpage::before {
        content: '\e837';
    }

    .material .e-savestate::before,
    .material-dark .e-savestate::before {
        content: '\e735';
    }

    .material .e-setstate::before,
    .material-dark .e-setstate::before {
        content: '\ec0b';
    }

    .material .e-reloadpage::before,
    .material-dark .e-reloadpage::before {
        content: '\e99d';
    }

    .bootstrap5 .e-resetstate::before,
    .bootstrap5-dark .e-resetstate::before,
    .tailwind-dark .e-resetstate::before,
    .tailwind .e-resetstate::before,
    .fluent .e-resetstate::before,
    .fluent-dark .e-resetstate::before,
    .material3 .e-resetstate::before,
    .material3-dark .e-resetstate::before {
        content: '\e89b';
    }

    .material .e-resetstate::before,
    .material-dark .e-resetstate::before,
    .bootstrap .e-resetstate::before,
    .bootstrap-dark .e-resetstate::before,
    .bootstrap4 .e-resetstate::before {
        content: '\e953';
    }

    .fabric .e-resetstate::before,
    .fabric-dark .e-resetstate::before,
    .highcontrast .e-resetstate::before {
        content: '\e948';
    }
</style>