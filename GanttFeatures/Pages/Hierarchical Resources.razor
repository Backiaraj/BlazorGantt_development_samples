@page "/HierarchydataWorkResource"

@using Syncfusion.Blazor.Gantt
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.TreeGrid

<SfGantt 
    @ref="Gantt" 
    DataSource="@TaskCollection"
     Height="450px"
    Width="1200px"
    WorkUnit="WorkUnit.Hour"
    Toolbar="@(new List<string>() { "Add", "Cancel", "CollapseAll", "Delete", "Edit", "ExpandAll", "Search", "Update" , "Indent" , "Outdent" ,"ZoomIn", "ZoomOut", "ZoomToFit"})" 
    EnableContextMenu="true">

    <GanttTaskFields 
        Id="TaskId" 
        Name="TaskName" 
        StartDate="StartDate" 
        EndDate="EndDate" 
        Duration="Duration" 
        Progress="Progress" 
        Child="SubTasks" 
        Work="Work" 
        ResourceInfo="Resources" 
        TaskType="TaskType">
    </GanttTaskFields>

    <GanttResourceFields Resources="GetResources" Id="ResourceId" Name="ResourceName" Unit="Unit" TResources="ResourceData"></GanttResourceFields>

    <GanttSelectionSettings Mode="SelectionMode.Row" Type="Syncfusion.Blazor.Grids.SelectionType.Multiple"></GanttSelectionSettings>

    <GanttEditSettings 
        AllowTaskbarEditing="true" 
        AllowEditing="true" 
        AllowAdding="true" 
        AllowDeleting="true" 
        Mode="Syncfusion.Blazor.Gantt.EditMode.Auto" 
        ShowDeleteConfirmDialog="true">
    </GanttEditSettings>


</SfGantt>

@code{
    public SfGantt<TaskData> Gantt;

    public List<TaskData> TaskCollection { get; set; }
    protected override void OnInitialized()
    {
    this.TaskCollection = GetTaskCollection();
    }
    public class ResourceData
    {
        public int ResourceId { get; set; }
        public string ResourceName { get; set; }
        public int Unit { get; set; }

    }

//Resources 
    List<ResourceData> GetResources = new List<ResourceData>()
        {  
            new ResourceData() { ResourceId= 1, ResourceName= "Martin Tamer" ,Unit=70},
            new ResourceData() { ResourceId= 2, ResourceName= "Rose Fuller" },
            new ResourceData() { ResourceId= 3, ResourceName= "Margaret Buchanan" },
            new ResourceData() { ResourceId= 4, ResourceName= "Fuller King" },
            new ResourceData() { ResourceId= 5, ResourceName= "Davolio Fuller" },
            new ResourceData() { ResourceId= 6, ResourceName= "Van Jack" },
            new ResourceData() { ResourceId= 7, ResourceName= "Fuller Buchanan" },
            new ResourceData() { ResourceId= 8, ResourceName= "Jack Davolio" },
            new ResourceData() { ResourceId= 9, ResourceName= "Tamer Vinet" },
            new ResourceData() { ResourceId= 10, ResourceName= "Vinet Fuller" },
            new ResourceData() { ResourceId= 11, ResourceName= "Bergs Anton" },
            new ResourceData() { ResourceId= 12, ResourceName= "Construction Supervisor" }
        };


    public class TaskData
    {
    public int TaskId { get; set; }
    public string TaskName { get; set; }
    public DateTime StartDate { get; set; }
    public string TaskType { get; set; }
    public DateTime EndDate { get; set; }
    public string Duration { get; set; }
    public int Progress { get; set; }
    public List<TaskData> SubTasks { get; set; }
    public double? Work { get; set; }
    public List<ResourceData> Resources { get; set; }
    }

    public static List<TaskData> GetTaskCollection()
    {
    List<TaskData> Tasks = new List<TaskData>()
    {
    new TaskData() {
        TaskId = 1,
        TaskName = "Project initiation",
        StartDate = new DateTime(2019, 04, 02),
        EndDate = new DateTime(2019, 04, 21),
        SubTasks = (new List <TaskData> () {
            new TaskData() {
                TaskId = 2,
                TaskName = "Identify Site location",
                StartDate = new DateTime(2019, 04, 02),
                Duration = "0",
                Progress = 30,
                Work=56,
                TaskType ="FixedDuration"
            },
            new TaskData() {
                TaskId = 3,
                TaskName = "Perform soil test",
                StartDate = new DateTime(2019, 04, 02),
                Duration = "4",
                Progress = 40,
                Work=16,
                Resources = new List<ResourceData>(){ new ResourceData() { ResourceId=1,Unit=70} ,new ResourceData() { ResourceId=6} }
            },
            new TaskData() {
                TaskId = 4,
                TaskName = "Soil test approval",
                StartDate = new DateTime(2019, 04, 02),
                Duration = "0",
                Progress = 30,
                Resources = new List<ResourceData>(){ new ResourceData() { ResourceId=2} ,new ResourceData() { ResourceId=3} ,new ResourceData() { ResourceId=5} },
                Work=96
            },
        })
    },
    new TaskData() {
        TaskId = 5,
        TaskName = "Project estimation",
        StartDate = new DateTime(2019, 04, 02),
        EndDate = new DateTime(2019, 04, 21),
        SubTasks = (new List <TaskData> () {
            new TaskData() {
                TaskId = 6,
                TaskName = "Develop floor plan for estimation",
                StartDate = new DateTime(2019, 04, 04),
                Duration = "3",
                Progress = 30,
                Resources = new List<ResourceData>(){ new ResourceData() { ResourceId=8} ,new ResourceData() { ResourceId=9} },
                Work=16
            },
            new TaskData() {
                TaskId = 7,
                TaskName = "List materials",
                StartDate = new DateTime(2019, 04, 04),
                Duration = "3",
                Progress = 40,
                Work=50
            },
            new TaskData() {
                TaskId = 8,
                TaskName = "Estimation approval",
                StartDate = new DateTime(2019, 04, 04),
                Duration = "0",
                Progress = 30,
                Resources = new List<ResourceData>(){ new ResourceData() { ResourceId=4} },
                Work=30
            }
        })
    },
     new TaskData() {
        TaskId = 9,
        TaskName = "Project initiation",
        StartDate = new DateTime(2019, 04, 02),
        EndDate = new DateTime(2019, 04, 21),
        Work=48,
        Resources = new List<ResourceData>(){ new ResourceData() { ResourceId=4},new ResourceData() { ResourceId=8} },
        SubTasks = (new List <TaskData> () {
            new TaskData() {
                TaskId = 10,
                TaskName = "Identify Site location",
                StartDate = new DateTime(2019, 04, 02),
                Duration = "0",
                Progress = 30,
                Work=60,
                Resources = new List<ResourceData>(){ new ResourceData() { ResourceId= 12},new ResourceData() { ResourceId= 5} },

            },
            new TaskData() {
                TaskId = 11,
                TaskName = "Perform soil test",
                StartDate = new DateTime(2019, 04, 02),
                Duration = "4",
                Progress = 40,
                Work=24,
                Resources = new List<ResourceData>(){ new ResourceData() { ResourceId= 12}}
            },
            new TaskData() {
                TaskId = 12,
                TaskName = "Soil test approval",
                StartDate = new DateTime(2019, 04, 02),
                Duration = "0",
                Progress = 30,
                Work=56
            },
        })
    },
     new TaskData() {
        TaskId = 13,
        TaskName = "Project estimation",
        StartDate = new DateTime(2019, 04, 02),
        EndDate = new DateTime(2019, 04, 21),
        SubTasks = (new List <TaskData> () {
            new TaskData() {
                TaskId = 14,
                TaskName = "Develop floor plan for estimation",
                StartDate = new DateTime(2019, 04, 04),
                Duration = "3",
                Progress = 30,
                Work=56
            },
            new TaskData() {
                TaskId = 14,
                TaskName = "List materials",
                StartDate = new DateTime(2019, 04, 04),
                Duration = "3",
                Progress = 40,
                Work=8
            },
            new TaskData() {
                TaskId = 15,
                TaskName = "Estimation approval",
                StartDate = new DateTime(2019, 04, 04),
                Duration = "0",
                Progress = 30,
                Work=12
            }
        })
    }
};
return Tasks;
}
}