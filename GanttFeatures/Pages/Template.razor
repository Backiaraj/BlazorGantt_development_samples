@page "/Template"

@using Syncfusion.Blazor.Gantt
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Popups 
@using Syncfusion.Blazor.Navigations

<SfGantt  
    @ref="Gantt" 
    DataSource="@TaskCollection" 
    Toolbar="@Toolbaritems"    
    AllowSelection="true" 
    EnableContextMenu="true" 
    AllowFiltering="true" 
    AllowSorting="true" 
    AllowResizing="true" 
    AllowUnscheduledTasks="true" 
    EnablePredecessorValidation="true" 
    ShowColumnMenu="true" 
    AllowReordering="true" 
    TreeColumnIndex=1 
    AllowRowDragAndDrop="true"
    ProjectStartDate="@ProjectStart" 
    ProjectEndDate="@ProjectEnd" 
    RenderBaseline="true" 
    HighlightWeekends="true" 
    Height="750px" 
    Width="1200px">

    <GanttTaskFields 
            Id="TaskId" 
            Name="TaskName" 
            StartDate="StartDate" 
            EndDate="EndDate" 
            Duration="Duration" 
            Progress="Progress" 
            ParentID="ParentId" 
            Dependency="Predecessor" 
            Notes="Notes" 
            BaselineStartDate="BaselineStartDate" 
            BaselineEndDate="BaselineEndDate" 
            Indicators="Indicators" >
    </GanttTaskFields>

    <GanttTimelineSettings UpdateTimescaleView="true"> </GanttTimelineSettings>

    <GanttEditSettings 
        AllowTaskbarEditing="true" 
        AllowEditing="true" 
        AllowAdding="true" 
        AllowDeleting="true" 
        Mode="Syncfusion.Blazor.Gantt.EditMode.Auto" 
        ShowDeleteConfirmDialog="true">
    </GanttEditSettings>

     <GanttTemplates TValue="TaskData">
        <ParentTaskbarTemplate>
            <div class="e-gantt-parent-taskbar e-custom-parent" style="height:22px;border-radius:5px;text-overflow:ellipsis;">
                <span class="e-task-label">@((context as TaskData).Duration)</span>
            </div>
        </ParentTaskbarTemplate>
        <TaskbarTemplate>
            <div class="e-gantt-child-taskbar e-custom-moments" style="height:22px;border-radius:5px;">
                <span class="e-task-label" style="top:15px;font-size:12px;text-overflow:ellipsis;height:90%;overflow:hidden;">@((context as TaskData).Custom)</span>
            </div>
        </TaskbarTemplate>
        <MilestoneTemplate>
            <div class="e-gantt-milestone" style="position:absolute;">
                <div class="e-milestone-top" style="border-right-width:9px;border-left-width:9px;border-bottom-width:9px;"></div>
                <div class="e-milestone-bottom" style="top:26px;border-right-width:9px; border-left-width:9px; border-top-width:9px;"></div>
            </div>
        </MilestoneTemplate>
    </GanttTemplates>

    <GanttLabelSettings TValue="TaskData" RightLabel="TaskName"></GanttLabelSettings>

    <GanttColumns>
        <GanttColumn Field="TaskId" Width="100"></GanttColumn>
        <GanttColumn Field="Custom"></GanttColumn>
        <GanttColumn Field="TaskName" HeaderText="Job Name" Width="250"></GanttColumn>
        <GanttColumn Field="StartDate" HeaderText="Start Date"></GanttColumn>
        <GanttColumn Field="EndDate" HeaderText="End Date"></GanttColumn>
        <GanttColumn Field="Duration" HeaderText="Duration"></GanttColumn>
        <GanttColumn Field="BaselineStartDate" HeaderText="BaselineStartDate " Width="200"></GanttColumn>
        <GanttColumn Field="BaselineEndDate" HeaderText="BaselineEndDate" Width="200"></GanttColumn>
        <GanttColumn Field="Progress" HeaderText="Progress"></GanttColumn>
        <GanttColumn Field="Predecessor" HeaderText="Dependency"></GanttColumn>
    </GanttColumns>

     <GanttEventMarkers>
                    <GanttEventMarker Day="@Event1" Label="Research phase"
                                      CssClass="e-custom-event-marker"></GanttEventMarker>
                    <GanttEventMarker Day="@Event2" Label="Design phase"
                                      CssClass="e-custom-event-marker"></GanttEventMarker>
                    <GanttEventMarker Day="@Event3" Label="Production phase"
                                      CssClass="e-custom-event-marker"></GanttEventMarker>
                    <GanttEventMarker Day="@Event4" Label="Sales and marketing phase"
                                      CssClass="e-custom-event-marker"></GanttEventMarker>
        </GanttEventMarkers>

                <GanttHolidays>
                    <GanttHoliday From="@Holiday1" To="@Holiday2" Label="Public holidays"></GanttHoliday>
                    <GanttHoliday From="@Holiday3" To="@Holiday4" Label="Public holiday"></GanttHoliday>
                </GanttHolidays>

    <GanttSplitterSettings Position="30%"></GanttSplitterSettings>

</SfGantt>
<style>
    .e-custom-parent {
        background-color: #6d619b;
        border: 1px solid #3f51b5;
    }

    .e-milestone-top {
        border-bottom-color: #7ab748 !important;
        border-bottom: 1px solid #3f51b5;
    }

    .e-milestone-bottom {
        border-top-color: #7ab748 !important;
        border-top: 1px solid #3f51b5;
    }

    .e-custom-moments {
        background-color: #7ab748;
        border: 1px solid #3f51b5;
    }
</style>
@code{
    public SfGantt<TaskData> Gantt;
    public List<Object> Toolbaritems = new List<Object>() { "Add", "Cancel", "CollapseAll", "Delete", "Edit", "ExpandAll", "NextTimeSpan", "PrevTimeSpan", "Search", "Update", new Syncfusion.Blazor.Navigations.ItemModel() { Text = "Quick Filter",
    TooltipText = "Quick Filter", Id = "toolbarfilter", Align = Syncfusion.Blazor.Navigations.ItemAlign.Right }};
    public DateTime Holiday1 = new DateTime(2019, 04, 11);
    public DateTime Holiday2 = new DateTime(2019, 04, 12);
    public DateTime Holiday3 = new DateTime(2019, 04, 01);
    public DateTime Holiday4 = new DateTime(2019, 04, 01);
    public DateTime Event1 = new DateTime(2019, 03, 27);
    public DateTime Event2 = new DateTime(2019, 04, 30);
    public DateTime Event3 = new DateTime(2019, 05, 22);
    public DateTime Event4 = new DateTime(2019, 06, 19);
    public DateTime ProjectStart = new DateTime(2019, 3, 24);
    public DateTime ProjectEnd = new DateTime(2019, 7, 6);

    //public List<object> Tools = new List<object>();
    public List<TaskData> TaskCollection { get; set; }
    protected override void OnInitialized()
    {
        this.TaskCollection = GetTaskCollection();
    
    }

    public class TaskData
    {
        public int TaskId { get; set; }
        public string TaskName { get; set; }
        public DateTime StartDate { get; set; }
        public DateTime BaselineStartDate { get; set; }
        public DateTime BaselineEndDate { get; set; }
        public DateTime EndDate { get; set; }
        public string Duration { get; set; }
        public int Progress { get; set; }
        public int? ParentId { get; set; }
        public string Notes { get; set; }
        public string Predecessor { get; set; }
        public string Custom { get; set; }
        public string Value { get; set; }
       
        public List<GanttIndicator> Indicators { get; set; }
    }

    public static List<TaskData> GetTaskCollection()
    {
       List<TaskData> Tasks = new List<TaskData>() {
        new TaskData() {
            TaskId = 1,
            TaskName = "Product concept ",
            StartDate = new DateTime(2019, 04, 02),
            EndDate = new DateTime(2019, 04, 08),
            Duration = "5days"
        },
        new TaskData() {
            TaskId = 2,
            TaskName = "Defining the product usage",
            StartDate = new DateTime(2019, 04, 02),
            EndDate = new DateTime(2019, 04, 08),
            Duration = "3",
            Progress = 30,
            ParentId = 1,
            BaselineStartDate = new DateTime(2019, 04, 02),
            BaselineEndDate = new DateTime(2019, 04, 02),
        },
        new TaskData() {
            TaskId = 3,
            TaskName = "Defining the Target audience",
            EndDate = new DateTime(2019, 04, 04),
            Progress = 40,
            ParentId = 1,
        },
        new TaskData() {
            TaskId = 4,
            TaskName = "Prepare product sketch and notes",
            StartDate = new DateTime(2019, 04, 05),
            Duration = "2",
            Progress = 30,
            ParentId = 1,
            Predecessor="2"
        },
       new TaskData() {
            TaskId = 5,
            TaskName = "Concept approval",
            StartDate = new DateTime(2019, 04, 08),
            EndDate = new DateTime(2019, 04, 08),
            Duration="0",
            Predecessor="3,4",
            Indicators=(new List<GanttIndicator>()
        {
        new GanttIndicator()
        {
            Name="Design phase",
            IconClass="e-btn-icon e-notes-info e-icons e-icon-left e-gantt e-notes-info::after",
            Date=new DateTime(2019, 04, 04),
            Tooltip="Design phase"
        },
        })
        },
        new TaskData() {
            TaskId = 6,
            TaskName = "Market Research",
            StartDate = new DateTime(2019, 04, 09),
            EndDate = new DateTime(2019, 04, 18),
             BaselineStartDate = new DateTime(2019, 04, 09),
                BaselineEndDate = new DateTime(2019, 04, 09),
            Duration = "4",
            Progress = 30,
        },
        new TaskData() {
            TaskId = 7,
            TaskName = "Demand Analysis",
            Duration = "4",
            Progress = 40,
            ParentId = 6
        },
        new TaskData() {
            TaskId = 8,
            TaskName = "Customer Strength",
            StartDate = new DateTime(2019, 04, 09),
            EndDate = new DateTime(2019, 04, 12),
            Duration = "4",
            Progress = 30,
            ParentId = 7,
            Predecessor="5",
            BaselineStartDate = new DateTime(2019, 04, 12),
            BaselineEndDate = new DateTime(2019, 04, 13),
        }, 
        new TaskData() {
            TaskId = 9,
            TaskName = "Market Opportunity analysis",
            StartDate = new DateTime(2019, 04, 09),
            EndDate = new DateTime(2019, 04, 012),
            Duration="4",
            ParentId= 7,
            Predecessor="5"
        },
        new TaskData() {
            TaskId = 10,
            TaskName = "Competitor analysis",
            StartDate = new DateTime(2019, 04, 15),
            EndDate = new DateTime(2019, 04, 18),
            Duration = "4",
            Progress = 30,
            ParentId= 6,
            Predecessor="7,8"
        },
        new TaskData() {
            TaskId = 11,
            TaskName = "Product Strength Analysis",
            StartDate = new DateTime(2019, 04, 15),
            EndDate = new DateTime(2019, 04, 18),
            Duration = "4",
            Progress = 40,
            ParentId = 6,
            Predecessor="9"
        },
        new TaskData() {
            TaskId = 12,
            TaskName = "Research Completed",
            StartDate = new DateTime(2019, 04, 18),
            EndDate = new DateTime(2019, 04, 18),
            Duration = "0",
            Progress = 30,
            ParentId = 6,
            Predecessor="10",
        },
         new TaskData() {
            TaskId = 13,
            TaskName = "Product design and developement",
            StartDate = new DateTime(2019, 04, 19),
            EndDate = new DateTime(2019, 05, 16),
            Duration="20",
        },
        new TaskData() {
            TaskId = 14,
            TaskName = "Functionality Design",
            StartDate = new DateTime(2019, 04, 19),
            EndDate = new DateTime(2019, 04, 23),
            Duration = "3",
            Progress = 30,
            ParentId = 13,
            Predecessor="12"
        },
        new TaskData() {
            TaskId = 15,
            TaskName = "Quality Design",
            StartDate = new DateTime(2019, 04, 19),
            EndDate = new DateTime(2019, 04, 23),
            Duration = "3",
            Progress = 40,
            ParentId = 13,
            Predecessor="12"
        },
        new TaskData() {
            TaskId = 16,
            TaskName = "Define reliability",
            StartDate = new DateTime(2019, 04, 24),
            EndDate = new DateTime(2019, 04, 25),
            Duration = "2",
            Progress = 30,
            ParentId = 13,
            Predecessor="15"
        },
         new TaskData() {
            TaskId = 17,
            TaskName = "Identifying raw mayerials",
            StartDate = new DateTime(2019, 04, 24),
            EndDate = new DateTime(2019, 04, 25),
            Duration="2",
            ParentId=13,
            Predecessor="15"
        },
        new TaskData() {
            TaskId = 18,
            TaskName = "Define cost plan",
            StartDate = new DateTime(2019, 04, 26),
            EndDate = new DateTime(2019, 04, 29),
            Duration = "2",
            Progress = 30,
            ParentId=13,
            Predecessor="17"
        },
        new TaskData() {
            TaskId = 19,
            TaskName = "Manufacturing cost",
            StartDate = new DateTime(2019, 04, 26),
            EndDate = new DateTime(2019, 04, 29),
            Duration = "2",
            Progress = 40,
            ParentId = 18,
            Predecessor="17"
        },
        new TaskData() {
            TaskId = 20,
            TaskName = "Selling cost",
            StartDate = new DateTime(2019, 04, 26),
            EndDate = new DateTime(2019, 04, 29),
            Duration = "2",
            Progress = 30,
            ParentId = 18,
            Predecessor="17"
        },
         new TaskData() {
            TaskId = 21,
            TaskName = "Developement of final design",
            StartDate = new DateTime(2019, 04, 30),
            EndDate = new DateTime(2019, 05, 08),
            Duration="7",
            ParentId=13
        },
        new TaskData() {
            TaskId = 22,
            TaskName = "Develope dimensions and design",
            StartDate = new DateTime(2019, 04, 30),
            EndDate = new DateTime(2019, 05, 01),
            Duration = "2",
            Progress = 30,
            ParentId=21,
            Predecessor="19,20"
        },
        new TaskData() {
            TaskId = 23,
            TaskName = "Develope designs to meet industry",
            StartDate = new DateTime(2019, 05, 02),
            EndDate = new DateTime(2019, 05, 03),
            Duration = "2",
            Progress = 40,
            ParentId = 21,
            Predecessor="22"
        },
        new TaskData() {
            TaskId = 24,
            TaskName = "Include all the deatails",
            StartDate = new DateTime(2019, 05, 06),
            EndDate = new DateTime(2019, 05, 08),
            Duration = "3",
            Progress = 30,
            ParentId = 21,
            Predecessor="23"
        },
         new TaskData() {
            TaskId = 25,
            TaskName = "CAD computer aided design",
            StartDate = new DateTime(2019, 05, 09),
            EndDate = new DateTime(2019, 05, 13),
            Duration="3",
            Predecessor="24"
        },
        new TaskData() {
            TaskId = 26,
            TaskName = "CAM computer aided manufacturing",
            StartDate = new DateTime(2019, 05, 14),
            EndDate = new DateTime(2019, 05, 16),
            Duration = "3",
            Progress = 30,
            Predecessor="25"
        },
        new TaskData() {
            TaskId = 27,
            TaskName = "Design complete",
            StartDate = new DateTime(2019, 04, 16),
            EndDate = new DateTime(2019, 04, 16),
            Duration = "0",
            Progress = 40,
            Predecessor="26"
        },
        new TaskData() {
            TaskId = 28,
            TaskName = "Prototype testing",
            StartDate = new DateTime(2019, 05, 17),
            EndDate = new DateTime(2019, 05, 22),
            Duration = "4",
            Progress = 30,
            Predecessor="27"
        }, new TaskData() {
            TaskId = 29,
            TaskName = "Include feedback",
            StartDate = new DateTime(2019, 05, 17),
            EndDate = new DateTime(2019, 05, 22),
            Duration="4",
            Predecessor="28ss",
        },
        new TaskData() {
            TaskId = 30,
            TaskName = "Manufacturing",
            StartDate = new DateTime(2019, 05, 23),
            EndDate = new DateTime(2019, 05, 29),
            Duration = "5",
            Progress = 30,
            Predecessor="28,29"
        },
        new TaskData() {
            TaskId = 31,
            TaskName = "Assembling material to finished goods",
            StartDate = new DateTime(2019, 05, 30),
            EndDate = new DateTime(2019, 06, 05),
            Duration = "5",
            Progress = 40,
            Predecessor="30"
        },
        new TaskData() {
            TaskId = 32,
            TaskName = "Final product developement",
            StartDate = new DateTime(2019, 06, 06),
            EndDate = new DateTime(2019, 06, 13),
            Duration = "6",
            Progress = 30,
        }, 
        new TaskData() {
            TaskId =33,
            TaskName = "Important Improvement",
            StartDate = new DateTime(2019, 06, 06),
            EndDate = new DateTime(2019, 06, 10),
            Duration="3",
            ParentId=32,
            Predecessor="31"
        },
        new TaskData() {
            TaskId = 34,
            TaskName = "Customer testing and feedback",
            StartDate = new DateTime(2019, 06, 11),
            EndDate = new DateTime(2019, 06, 13),
            Duration = "3",
            Progress = 30,
            ParentId=32,
            Predecessor="33"
        },
        new TaskData() {
            TaskId = 35,
            TaskName = "Final product developement",
            StartDate = new DateTime(2019, 06, 14),
            EndDate = new DateTime(2019, 06, 19),
            Duration = "4",
            Progress = 40,
        },
        new TaskData() {
            TaskId = 36,
            TaskName = "Important Improvement",
            StartDate = new DateTime(2019, 06, 14),
            EndDate = new DateTime(2019, 06, 19),
            Duration = "4",
            Progress = 30,
            ParentId = 35,
            Predecessor="34"
        },
         new TaskData() {
            TaskId = 37,
            TaskName = "Address any unforeseen issue",
            StartDate = new DateTime(2019, 06, 14),
            EndDate = new DateTime(2019, 06, 19),
            Duration = "4",
            Progress = 30,
            Predecessor="36ss",
            ParentId=35,
        },
        new TaskData() {
            TaskId = 38,
            TaskName = "Final product ",
            StartDate = new DateTime(2019, 06, 20),
            EndDate = new DateTime(2019, 07, 01),
            Duration = "8",
            Progress = 40,
        },
        new TaskData() {
            TaskId = 39,
            TaskName = "Branding product",
            StartDate = new DateTime(2019, 06, 20),
            EndDate = new DateTime(2019, 06, 25),
            Duration = "4",
            Progress = 30,
            ParentId = 38,
            Predecessor="37"
        },
        new TaskData()
        {
            TaskId=40,
            TaskName="Marketing and presales",
            StartDate=new DateTime(2019,06,26),
            EndDate=new DateTime(2019,07,01),
            ParentId=38,
            Duration="4",
            Predecessor="39"
        }
    };
            return Tasks;
        }
    }
