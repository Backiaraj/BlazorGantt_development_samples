@page "/Virtulaization"

@using Syncfusion.Blazor.Gantt

<SfGantt 
        @ref="Gantt"
         ID="Gantt"
         Toolbar="@(new List<string>() { "Add", "Cancel", "CollapseAll", "Delete", "Edit", "ExpandAll", "NextTimeSpan", "PrevTimeSpan", "Search", "Update" , "Indent" , "Outdent" ,"ZoomIn", "ZoomOut", "ZoomToFit"})" 
         DataSource="@TaskCollection"
         EnableVirtualization="true" 
         ProjectStartDate="ProjectStartDate" 
         ProjectEndDate="ProjectEndDate"
         AllowSelection="true" 
         EnableContextMenu="true" 
         AllowFiltering="true"
         AllowSorting="true" 
         AllowResizing="true" 
         AllowUnscheduledTasks="true" 
         EnablePredecessorValidation="true"
         ShowColumnMenu="true" 
         AllowReordering="true"  
         AllowRowDragAndDrop="true"
         Height="450px" 
         Width="1200px">
    <GanttTaskFields Id="ID"
                     Name="TaskName"
                     StartDate="StartDate"
                     EndDate="EndDate"
                     Duration="Duration"
                     Progress="Progress"
                     ParentID="ParentId" >
    </GanttTaskFields>

    <GanttEditSettings 
        AllowAdding="true" 
        AllowDeleting="true" 
        AllowEditing="true" 
        AllowTaskbarEditing="true" 
        ShowDeleteConfirmDialog="true" 
        Mode="EditMode.Auto">
    </GanttEditSettings>

    <GanttLabelSettings LeftLabel="TaskName" TValue="TaskData"></GanttLabelSettings>

     <GanttSplitterSettings Position="30%"></GanttSplitterSettings>
</SfGantt>

@code{
    public SfGantt<TaskData> Gantt;
    SfGantt<TaskData> Obj { get; set; }
    public DateTime ProjectStartDate = new DateTime(2017, 01, 01);
    public DateTime ProjectEndDate = new DateTime(2017, 01, 30);
    public List<TaskData> TaskCollection { get; set; }
    protected override void OnInitialized()
    {
        this.TaskCollection = VirtualData.GetTreeVirtualData();
    }
    public class VirtualData
    {
        public static List<TaskData> GetTreeVirtualData()
        {
            List<TaskData> DataCollection = new List<TaskData>();
            Random rand = new Random();
            var x = 0;
            for (var i = 1; i <= 100; i++)
            {
                var name = rand.Next(0, 100);
                TaskData Parent = new TaskData()
                {
                    ID = ++x,
                    TaskName = "Task " + x,
                    StartDate = new DateTime(2017, 1, 9),
                    EndDate = new DateTime(2017, 1, 13),
                    Duration = "5",
                    Progress = rand.Next(100),
                    ParentId = null,
                };
                DataCollection.Add(Parent);
                for (var j = 1; j <= 4; j++)
                {
                    var childName = rand.Next(0, 100);
                    DataCollection.Add(new TaskData()
                    {
                        ID = ++x,
                        TaskName = "Task " + x,
                        StartDate = new DateTime(2017, 1, 9),
                        EndDate = new DateTime(2019, 1, 13),
                        Duration = "5",
                        Progress = rand.Next(100),
                        ParentId = Parent.ID
                    });
                }
            }
            return DataCollection;
        }
    }
    public class TaskData
    {
        public int ID { get; set; }
        public string TaskName { get; set; }
        public DateTime StartDate { get; set; }
        public DateTime EndDate { get; set; }
        public string Duration { get; set; }
        public int Progress { get; set; }
        public int? ParentId { get; set; }
    }
}